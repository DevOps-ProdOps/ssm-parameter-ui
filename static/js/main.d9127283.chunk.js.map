{"version":3,"sources":["App/App.module.scss","Setup/Setup.module.scss","Parameter/Parameter.module.scss","ParameterNode/ParameterNode.module.scss","MenuItem/MenuItem.tsx","Setup/Setup.tsx","services/parameters.ts","state/actions.ts","EditModal/EditModal.tsx","Parameter/Parameter.tsx","ParameterNode/ParameterNode.tsx","state/reducer.ts","ParameterTree/index.ts","ParameterTree/ParameterTree.tsx","App/App.tsx","serviceWorker.ts","state/sagas.ts","index.tsx"],"names":["module","exports","header","options","parameter","parameterType","controls","editButton","deleteButton","info","children","MenuItem","withRouter","_ref","history","name","path","exactMatch","location","match","matchPath","pathname","exact","react_default","a","createElement","Menu","Item","active","onClick","push","DEFAULT_OPTIONS","region","credentials","accessKeyId","secretAccessKey","CONFIG_KEY","Setup","_useState","useState","JSON","stringify","_useState2","Object","slicedToArray","setOptions","useEffect","storedOpts","localStorage","getItem","Grid","Row","Column","Form","onSubmit","restringifyed","parse","setItem","TextArea","className","styles","label","value","onChange","e","target","rows","Button","getParametersInternal","asyncToGenerator","regenerator_default","mark","_callee","nextToken","ssmClient","params","wrap","_context","prev","next","SSM","getParametersByPath","Path","WithDecryption","Recursive","MaxResults","NextToken","promise","sent","t0","t1","toConsumableArray","Parameters","t2","t3","t4","abrupt","concat","call","stop","this","_x","_x2","apply","arguments","getParameters","treeParameters","parameters","TreeNode","forEach","param","nameParts","Name","split","currentTreeTreeNode","index","length","putParameter","_ref2","_callee2","_context2","_x3","LOAD_PARAMETERS","LOAD_PARAMETERS_SUCCEEDED","LOAD_PARAMETERS_FAILED","loadParameters","load","type","started","succeeded","payload","failed","EditModal","_ref$putParameter","ssmPutParameter","open","setOpen","_useState3","Type","_useState4","setType","_useState5","_useState6","setName","_useState7","Value","_useState8","setValue","_useState9","_useState10","submitting","setSubmitting","_useState11","_useState12","error","setError","Modal","onClose","trigger","React","cloneElement","Header","Content","Description","Overwrite","Field","placeholder","Select","key","text","_event","_ref3","Message","negative","stack","loading","disabled","Parameter","childNode","Label","as","content","icon","undefined","Group","EditModal_EditModal","description","ParameterNode","node","parentPath","fullPath","parameterNode","Icon","createButton","_","c","keys","Fragment","Parameter_Parameter","INITIAL_STATE","ParameterTree","compose","connect","state","props","hasErrored","isLoading","Dimmer","Loader","size","width","ParameterNode_ParameterNode","App","BrowserRouter","Container","Route","component","src_ParameterTree_ParameterTree","Setup_Setup","Component","Boolean","window","hostname","watchLoadParameters","rootSaga","put","_marked","takeLatest","Actions","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","action","objectSpread","applyMiddleware","run","ReactDOM","render","es","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9127283.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__1gthY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Setup_options__w8eR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parameter\":\"Parameter_parameter__3U4Bt\",\"header\":\"Parameter_header__V08Wh\",\"parameterType\":\"Parameter_parameterType__rPz-V\",\"controls\":\"Parameter_controls__1hc0D\",\"editButton\":\"Parameter_editButton__1AG8a\",\"deleteButton\":\"Parameter_deleteButton__7LdFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ParameterNode_header__kutRV\",\"info\":\"ParameterNode_info__1fqdN\",\"children\":\"ParameterNode_children__FgXFL\",\"controls\":\"ParameterNode_controls__1DgCV\"};","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { RouteComponentProps, withRouter, matchPath } from \"react-router\";\n\ninterface UnwrappedMenuItemProps {\n  name: string;\n  path: string;\n  exactMatch?: boolean;\n}\n\ninterface MenuItemProps extends UnwrappedMenuItemProps, RouteComponentProps {}\n\nconst UnwrappedMenuItem: React.FunctionComponent<MenuItemProps> = ({\n  history,\n  name,\n  path,\n  exactMatch,\n  location,\n}) => {\n  const match = matchPath(location.pathname, {\n    exact: exactMatch,\n    path,\n  });\n\n  return (\n    <Menu.Item name={name} active={!!match} onClick={() => history.push(path)}>\n      {name}\n    </Menu.Item>\n  );\n};\n\nexport const MenuItem = withRouter(UnwrappedMenuItem) as React.ComponentClass<\n  UnwrappedMenuItemProps\n>;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Grid } from \"semantic-ui-react\";\nimport { ConfigurationOptions } from \"aws-sdk/lib/config\";\nimport styles from \"./Setup.module.scss\";\n\nconst DEFAULT_OPTIONS: ConfigurationOptions = {\n  region: \"eu-west-1\",\n  credentials: {\n    accessKeyId: \"\",\n    secretAccessKey: \"\",\n  },\n};\n\nexport const CONFIG_KEY = \"_ssm_parameter_ui_options\";\n\nexport const Setup: React.FunctionComponent<{}> = () => {\n  const [options, setOptions] = useState(\n    JSON.stringify(DEFAULT_OPTIONS, null, 2)\n  );\n\n  useEffect(() => {\n    const storedOpts = localStorage.getItem(CONFIG_KEY);\n    setOptions(\n      storedOpts ? storedOpts : JSON.stringify(DEFAULT_OPTIONS, null, 2)\n    );\n  }, []);\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column>\n          <Form\n            onSubmit={() => {\n              const restringifyed = JSON.stringify(\n                JSON.parse(options),\n                null,\n                2\n              );\n              localStorage.setItem(CONFIG_KEY, restringifyed);\n              setOptions(restringifyed);\n            }}\n          >\n            <Form.TextArea\n              className={styles.options}\n              label=\"Options\"\n              name=\"options\"\n              value={options}\n              onChange={e => setOptions((e.target as any).value)}\n              rows={10}\n            />\n            <Form.Button>Save</Form.Button>\n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n","import { AWSError, Request, SSM } from \"aws-sdk\";\nimport { CONFIG_KEY } from \"../Setup/Setup\";\n\nconst getParametersInternal = async (\n  path: string,\n  nextToken?: string\n): Promise<SSM.ParameterList> => {\n  const ssmClient = new SSM(\n    JSON.parse(localStorage.getItem(CONFIG_KEY) || \"{}\")\n  );\n\n  const params = await ssmClient\n    .getParametersByPath({\n      Path: path,\n      WithDecryption: true,\n      Recursive: true,\n      MaxResults: 10,\n      NextToken: nextToken,\n    })\n    .promise();\n\n  if (params.NextToken) {\n    return [\n      ...(params.Parameters || []),\n      ...(await getParametersInternal(path, params.NextToken)),\n    ];\n  } else {\n    return params.Parameters || [];\n  }\n};\n\n/**\n * Get all parameters stored in an account, making multiple API calls to page\n * through them.\n *\n * @param path\n */\nexport const getParameters = (path: string) => getParametersInternal(path);\n\nexport interface TreeNode {\n  path: string;\n  parameter?: SSM.Parameter;\n  children: Record<string, TreeNode>;\n}\n\n/**\n * Take the flat parameter values returned by AWS and build up a tree of each\n * folder.\n *\n * @param parameters\n */\nexport const treeParameters = (parameters: SSM.ParameterList): TreeNode => {\n  const TreeNode: TreeNode = {\n    path: \"/\",\n    children: {},\n  };\n\n  parameters.forEach(param => {\n    const nameParts = param.Name!.split(\"/\");\n\n    // starts with a forward slash (not root param)?\n    if (nameParts[0] === \"\") {\n      // create top-level key if required\n      if (!TreeNode.children[nameParts[1]]) {\n        TreeNode.children[nameParts[1]] = {\n          path: nameParts[1],\n          children: {},\n        };\n      }\n\n      let currentTreeTreeNode: TreeNode = TreeNode.children[nameParts[1]]; // = null;\n\n      // skip first (empty) name part and top-level key\n      for (let index = 2; index < nameParts.length; index++) {\n        // create sub-key if required\n        if (!currentTreeTreeNode.children[nameParts[index]]) {\n          currentTreeTreeNode.children[nameParts[index]] = {\n            path: nameParts[index],\n            children: {},\n          };\n          currentTreeTreeNode = currentTreeTreeNode.children[nameParts[index]];\n        } else {\n          currentTreeTreeNode = currentTreeTreeNode.children[nameParts[index]];\n        }\n\n        if (index === nameParts.length - 1) {\n          currentTreeTreeNode.parameter = param;\n        }\n      }\n    } else {\n      if (!TreeNode.children) {\n        TreeNode.children = {};\n      }\n\n      TreeNode.children[nameParts[0]] = {\n        path: nameParts[0],\n        parameter: param,\n        children: {},\n      };\n    }\n  });\n\n  return TreeNode;\n};\n\nexport const putParameter = async (\n  params: SSM.Types.PutParameterRequest\n): Promise<SSM.Types.PutParameterResult> => {\n  const ssmClient = new SSM(\n    JSON.parse(localStorage.getItem(CONFIG_KEY) || \"{}\")\n  );\n\n  return ssmClient.putParameter(params).promise();\n};\n","import { Action, ActionCreator } from \"redux\";\n\nexport const LOAD_PARAMETERS = \"LOAD_PARAMETERS/LOAD\";\nexport type LOAD_PARAMETERS = \"LOAD_PARAMETERS/LOAD\";\nexport const LOAD_PARAMETERS_STARTED = \"LOAD_PARAMETERS/STARTED\";\nexport type LOAD_PARAMETERS_STARTED = \"LOAD_PARAMETERS/STARTED\";\nexport const LOAD_PARAMETERS_SUCCEEDED = \"LOAD_PARAMETERS/SUCCEEDED\";\nexport type LOAD_PARAMETERS_SUCCEEDED = \"LOAD_PARAMETERS/SUCCEEDED\";\nexport const LOAD_PARAMETERS_FAILED = \"LOAD_PARAMETERS/FAILED\";\nexport type LOAD_PARAMETERS_FAILED = \"LOAD_PARAMETERS/FAILED\";\n\nexport type LoadParametersStartedAction = Action<LOAD_PARAMETERS_STARTED>;\n\nexport interface LoadParametersSucceededAction\n  extends Action<LOAD_PARAMETERS_SUCCEEDED> {\n  payload: any[];\n}\n\nexport interface LoadParametersFailedAction\n  extends Action<LOAD_PARAMETERS_FAILED> {\n  payload: Error;\n}\n\nexport const loadParameters: Record<string, ActionCreator<Action<any>>> = {\n  load: () => ({ type: LOAD_PARAMETERS }),\n  started: () => ({ type: LOAD_PARAMETERS_STARTED }),\n  succeeded: (payload: any) => ({ type: LOAD_PARAMETERS_SUCCEEDED, payload }),\n  failed: (payload: Error) => ({ type: LOAD_PARAMETERS_FAILED, payload }),\n};\n\nexport type AppAction =\n  LoadParametersStartedAction |\n  LoadParametersSucceededAction |\n  LoadParametersFailedAction;\n","import React, { useState } from \"react\";\nimport { Modal, Form, Button, Select, Message } from \"semantic-ui-react\";\nimport { AWSError, Request, SSM } from \"aws-sdk\";\nimport { putParameter as ssmPutParameter } from \"../services/parameters\";\n\ninterface EditModalProps {\n  children: React.ReactNode;\n  parameter?: SSM.Parameter; // edit mode\n  putParameter?: (\n    params: SSM.Types.PutParameterRequest\n  ) => Request<SSM.Types.PutParameterResult, AWSError>;\n  path?: string; // create mode\n}\n\nexport const EditModal: React.FunctionComponent<EditModalProps> = ({\n  children,\n  parameter,\n  putParameter = ssmPutParameter,\n  path,\n}) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [type, setType] = useState<string>(\n    parameter ? parameter.Type! : \"String\"\n  );\n  const [name, setName] = useState<string>(\n    parameter ? parameter.Name! : path || \":\"\n  );\n  const [value, setValue] = useState<string>(parameter ? parameter.Value! : \"\");\n\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  return (\n    <Modal\n      open={open}\n      onClose={() => setOpen(false)}\n      trigger={React.cloneElement(children as any, {\n        onClick: () => setOpen(true),\n      })}\n    >\n      <Modal.Header>{parameter ? \"Update\" : \"Create\"} parameter</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Form\n            onSubmit={async () => {\n              setSubmitting(true);\n\n              try {\n                await putParameter({\n                  Name: name,\n                  Type: type,\n                  Value: value,\n                  Overwrite: !!parameter,\n                });\n\n                setSubmitting(false);\n                setOpen(false);\n              } catch (err) {\n                setError(err);\n              }\n            }}\n          >\n            <Form.Field>\n              <label>Name</label>\n              <input\n                name=\"name\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Sensitive value?</label>\n              <Select\n                name=\"type\"\n                placeholder=\"Encrypt the value?\"\n                options={[\n                  { key: \"SecureString\", text: \"Yes\", value: \"SecureString\" },\n                  { key: \"String\", text: \"No\", value: \"String\" },\n                ]}\n                value={type}\n                // disabled={!!parameter}\n                onChange={(_event, { value }) => setType(value as string)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Value</label>\n              <input\n                name=\"value\"\n                placeholder=\"Value\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n              />\n            </Form.Field>\n            {error && (\n              <Message negative>\n                <Message.Header>Error</Message.Header>\n                <pre>{error.stack}</pre>\n              </Message>\n            )}\n            <Button type=\"submit\" loading={submitting} disabled={submitting}>\n              Save\n            </Button>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Button, Label } from \"semantic-ui-react\";\nimport { TreeNode } from \"../services/parameters\";\nimport styles from \"./Parameter.module.scss\";\nimport { EditModal } from \"../EditModal/EditModal\";\n\ninterface ParameterProps {\n  childNode: TreeNode;\n}\n\nexport const Parameter: React.FunctionComponent<ParameterProps> = ({\n  childNode,\n}) => (\n  <div className={styles.parameter}>\n    <div className={styles.header}>\n      <span className={styles.path}>{childNode.path}</span>\n\n      <Label\n        as=\"span\"\n        className={styles.parameterType}\n        content={childNode.parameter!.Type}\n        icon={childNode.parameter!.Type === \"SecureString\" ? \"lock\" : undefined}\n      />\n\n      <Button.Group className={styles.controls}>\n        <EditModal parameter={childNode.parameter}>\n          <Button icon=\"pencil\" className={styles.editButton} />\n        </EditModal>\n        <Button icon=\"trash\" className={styles.deleteButton} />\n      </Button.Group>\n    </div>\n\n    <div className={styles.description}>\n      <pre>{childNode.parameter!.Value}</pre>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { TreeNode } from \"../services/parameters\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { Parameter } from \"../Parameter/Parameter\";\nimport styles from \"./ParameterNode.module.scss\";\nimport * as _ from \"lodash\";\nimport { EditModal } from \"../EditModal/EditModal\";\n\nexport interface ParameterNodeProps {\n  node: TreeNode;\n  parentPath?: string;\n}\n\nexport const ParameterNode: React.FunctionComponent<ParameterNodeProps> = ({\n  node,\n  parentPath,\n}) => {\n  const fullPath = parentPath ? parentPath + node.path + \"/\" : node.path;\n\n  return (\n    <div className={styles.parameterNode}>\n      <div className={styles.header}>\n        <Icon name=\"folder\" />\n\n        <div className={styles.info}>\n          <div className={styles.name}>{node.path}</div>\n          <div className={styles.description}>{fullPath}</div>\n        </div>\n\n        <Button.Group className={styles.controls}>\n          <EditModal path={fullPath}>\n            <Button icon=\"plus\" className={styles.createButton} />\n          </EditModal>\n        </Button.Group>\n      </div>\n\n      <div className={styles.children}>\n        {_.map(\n          _.orderBy(\n            node.children,\n            c => {\n              // Show parameters before folders (prioritise params with a _)\n              if (Object.keys(c.children).length >= 1) {\n                return c.path;\n              } else {\n                return `_${c.path}`;\n              }\n            },\n            \"asc\"\n          ),\n          (childNode, path) => (\n            <React.Fragment key={path}>\n              {childNode.parameter && <Parameter childNode={childNode} />}\n              {Object.keys(childNode.children).length >= 1 && (\n                <ParameterNode\n                  key={path}\n                  node={childNode}\n                  parentPath={fullPath}\n                />\n              )}\n            </React.Fragment>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Reducer } from \"redux\";\nimport {\n  AppAction,\n  LOAD_PARAMETERS_FAILED,\n  LOAD_PARAMETERS_STARTED,\n  LOAD_PARAMETERS_SUCCEEDED,\n} from \"./actions\";\n\nexport interface LoadableLoading<T> {\n  loading: true;\n  error: null;\n  value: null;\n}\n\nexport const isLoading = <T>(\n  props: Loadable<T>\n): props is LoadableLoading<T> => {\n  return props.loading;\n};\n\nexport interface LoadableLoaded<T> {\n  loading: false;\n  error: null;\n  value: T;\n}\n\nexport const hasLoaded = <T>(\n  props: Loadable<T>\n): props is LoadableLoaded<T> => {\n  return !props.loading && props.error === null;\n};\n\nexport interface LoadableErrored<T> {\n  loading: false;\n  error: Error;\n  value: null;\n}\n\nexport const hasErrored = <T>(\n  props: Loadable<T>\n): props is LoadableErrored<T> => {\n  return props.error !== null;\n};\n\nexport type Loadable<T> =\n  | LoadableLoading<T>\n  | LoadableLoaded<T>\n  | LoadableErrored<T>;\n\nexport interface State {\n  parameters: Loadable<any>;\n}\n\nconst INITIAL_STATE: State = {\n  parameters: {\n    loading: true,\n    error: null,\n    value: null,\n  },\n};\n\nexport const reducer: Reducer = (\n  state: State = INITIAL_STATE,\n  action: AppAction\n): State => {\n  switch (action.type) {\n    case LOAD_PARAMETERS_STARTED:\n      return {\n        ...state,\n        parameters: {\n          loading: true,\n          error: null,\n          value: null,\n        },\n      };\n    case LOAD_PARAMETERS_SUCCEEDED:\n      return {\n        ...state,\n        parameters: {\n          loading: false,\n          error: null,\n          value: action.payload,\n        },\n      };\n    case LOAD_PARAMETERS_FAILED:\n      return {\n        ...state,\n        parameters: {\n          loading: false,\n          error: action.payload,\n          value: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport compose from \"recompose/compose\";\nimport { connect } from \"react-redux\";\nimport { loadParameters } from \"../state/actions\";\nimport {\n  ParameterTree as UnwrappedParameterTree,\n  ParameterTreeProps,\n} from \"./ParameterTree\";\nimport { State } from \"../state/reducer\";\n\nexport const ParameterTree = compose(\n  connect(\n    (state: State) => state.parameters,\n    loadParameters\n  )\n)(UnwrappedParameterTree as any) as React.ComponentType<ParameterTreeProps>;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  getParameters,\n  TreeNode,\n  treeParameters,\n} from \"../services/parameters\";\nimport { Dimmer, Grid, List, Loader, Message } from \"semantic-ui-react\";\nimport { ParameterNode } from \"../ParameterNode/ParameterNode\";\nimport { hasErrored, isLoading, Loadable } from \"../state/reducer\";\n\nexport type ParameterTreeProps = {};\n\ntype ConnectedParameterTreeProps = ParameterTreeProps &\n  Loadable<TreeNode> & {\n    load: () => void;\n  };\n\nexport const ParameterTree: React.FunctionComponent<\n  ConnectedParameterTreeProps\n> = props => {\n  // const [tree, setTree] = useState<TreeNode | null>(null);\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState<Error | null>(null);\n\n  // useEffect(() => {\n  //   getParameters(\"/\")\n  //     .then(params => {\n  //       setLoading(false);\n  //       setTree(treeParameters(params));\n  //     })\n  //     .catch(setError);\n  // }, []);\n\n  useEffect(() => {\n    props.load();\n  }, []);\n\n  if (hasErrored(props)) {\n    return (\n      <Message negative>\n        <Message.Header>Failed to load parameters.</Message.Header>\n        <pre>{props.error.stack}</pre>\n      </Message>\n    );\n  } else if (isLoading(props)) {\n    return (\n      <Dimmer active>\n        <Loader size=\"massive\">Loading</Loader>\n      </Dimmer>\n    );\n  } else {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <ParameterNode node={props.value} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n};\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport { Container, Grid, Header, Menu } from \"semantic-ui-react\";\nimport { MenuItem } from \"../MenuItem/MenuItem\";\nimport styles from \"./App.module.scss\";\nimport \"../services/parameters\";\nimport { ParameterTree } from \"../ParameterTree\";\nimport { Setup } from \"../Setup\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <>\n          <Container>\n            <Grid>\n              <Grid.Row className={styles.header}>\n                <Grid.Column>\n                  <Header as=\"h1\">SSM Parameter UI</Header>\n                </Grid.Column>\n              </Grid.Row>\n\n              <Grid.Row>\n                <Grid.Column>\n                  <Menu>\n                    <MenuItem path=\"/\" exactMatch name=\"Home\" />\n                    <MenuItem path=\"/setup\" name=\"Setup\" />\n                  </Menu>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n            <Route exact path=\"/\" component={() => <ParameterTree />} />\n            <Route exact path=\"/setup\" component={() => <Setup />} />\n          </Container>\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport * as Actions from \"./actions\";\nimport { getParameters, treeParameters } from \"../services/parameters\";\nimport { LOAD_PARAMETERS_FAILED, LOAD_PARAMETERS_SUCCEEDED } from \"./actions\";\n\nexport function* loadParameters(): any {\n  try {\n    const parameters = yield call(getParameters, \"/\");\n    yield put({\n      type: LOAD_PARAMETERS_SUCCEEDED,\n      payload: treeParameters(parameters),\n    });\n  } catch (err) {\n    yield put({ type: LOAD_PARAMETERS_FAILED, payload: err });\n  }\n}\n\nexport function* watchLoadParameters(): any {\n  yield takeLatest(Actions.LOAD_PARAMETERS, loadParameters);\n}\n\nexport function* rootSaga(): any {\n  yield all([watchLoadParameters()]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { reducer } from \"./state/reducer\";\nimport { rootSaga } from \"./state/sagas\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}